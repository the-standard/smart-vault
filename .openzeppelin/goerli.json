{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x20B8da600e66Cb6C64255b93A9cdEb064204A675",
    "txHash": "0x42e61aff640ebf2fdf5f53582a642be8d860f522575f0a696b74fa0561d346f0"
  },
  "proxies": [
    {
      "address": "0xbF615e590EC00140d522A721251645c65642de58",
      "txHash": "0x44e87ffd2bfc2234167240a6d730e677d3d5572913d75fa889218d4f89a1363c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6780eb002d25bfcfc8ecb46fb18fab2b3b294127cd1116ec90c1b062022cde94": {
      "address": "0xD7228ffBa9d246Fa6CfA91ff60E46f906b5858E9",
      "txHash": "0x6be77fe9a88aa1696100d92abd50b3ef927dd6b9cfd19eb464f1af9c91d457da",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "protocol",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:23"
          },
          {
            "label": "seuro",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:24"
          },
          {
            "label": "collateralRate",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:25"
          },
          {
            "label": "tokenManager",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:26"
          },
          {
            "label": "smartVaultDeployer",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:27"
          },
          {
            "label": "smartVaultIndex",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(ISmartVaultIndex)8796",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:28"
          },
          {
            "label": "lastToken",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:29"
          },
          {
            "label": "nftMetadataGenerator",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:30"
          },
          {
            "label": "mintFeeRate",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:31"
          },
          {
            "label": "burnFeeRate",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "SmartVaultManager",
            "src": "contracts/SmartVaultManager.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISmartVaultIndex)8796": {
            "label": "contract ISmartVaultIndex",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
